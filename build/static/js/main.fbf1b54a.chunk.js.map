{"version":3,"sources":["components/custom/NewElection.js","components/custom/Navbar.js","components/custom/Main.js","components/custom/Sidebar.js","components/custom/Home.js","components/custom/Vote.js","components/custom/VoteCount.js","components/custom/ElectionData.js","components/custom/Choose.js","components/custom/NewCandidate.js","components/custom/Login.js","App.js","serviceWorker.js","index.js"],"names":["NewElection","props","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","state","election_name","election_organizer","election_password","console","log","axios","post","then","response","window","location","assign","catch","err","error","className","onSubmit","this","type","id","onChange","required","htmlFor","Component","Navbar","history","pathname","to","withRouter","Main","showComponents","Home","image","collapsed","rtl","toggled","handleToggleSidebar","breakPoint","onToggle","style","padding","textTransform","fontWeight","fontSize","letterSpacing","overflow","textOverflow","whiteSpace","icon","Sidebar","Vote","selectedId","vote","account","election","candCount","candidates","loading","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","Election","networks","Contract","abi","address","methods","candidatesCount","call","i","election_id","send","from","once","receipt","match","params","electionList","map","key","details","href","onClick","VoteCount","voteCount","ElectionData","innerHTML","index","length","final","currentComponent","get","data","Choose","NewCandidate","addCandidates","candidate_name","candidate_details","bind","loadBlockChain","addCandidate","Login","username","password","App","getVal","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fbf1b54a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NewElection extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: '',\n            election_organizer: '',\n            election_password: '',\n        };\n    }\n\n    handleInputChange = e => {\n        this.setState({\n        [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { election_name, election_organizer, election_password } = this.state;\n        console.log(election_name);\n        axios.post('/api/electionName', {\n            election_name: election_name,\n            election_organizer: election_organizer,\n            election_password: election_password\n        })\n        .then(function(response){ \n            window.location.assign('/');\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <h4>Create New Election</h4>\n                    <form onSubmit={this.handleSubmit}>\n                        <input type=\"text\" id=\"election_name\" name=\"election_name\" onChange={this.handleInputChange} required/>\n                        <label htmlFor=\"name\">Election Name</label><br></br>\n                        <input type=\"text\" id=\"election_organizer\" name=\"election_organizer\" onChange={this.handleInputChange} required/>\n                        <label htmlFor=\"name\">Election Organizer</label><br></br>\n                        <input type=\"password\" id=\"election_password\" name=\"election_password\" onChange={this.handleInputChange} required/>\n                        <label htmlFor=\"name\">Election Password</label><br></br><br></br>\n                        <button className=\"btn blue darken-2\" type=\"submit\" name=\"action\">Submit\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n                    </form>\n            </div>\n        )\n    }\n}\n\nexport default NewElection;","import React, { Component } from 'react'\nimport { NavLink, withRouter } from 'react-router-dom'\n\nclass Navbar extends Component {\n    state = {\n        location: \"\"\n    }\n\n    componentWillReceiveProps(){\n        console.log(this.props)\n        this.setState({\n            location: this.props.history.location.pathname\n        })\n    }\n    render(){\n\n        if(this.state.location === \"/\" || this.state.location === \"/choose\"  || this.state.location === \"/vote\"  || this.state.location === \"/login\"){\n            return ( \n                <nav className=\"nav-wrapper black darken-2\">\n                    <div className=\"container\">\n                        <a className=\"brand-logo\">\n                            E-Election\n                        </a>\n                    </div>\n                </nav>\n            )\n        }else{\n            return(\n                <nav className=\"nav-wrapper black darken-2\">\n                    <div className=\"container\">\n                        <a className=\"brand-logo\">\n                            E-Election\n                        </a>\n                        <ul className=\"right\">\n                            <li><NavLink to=\"/\">Home</NavLink></li>\n                            <li><NavLink to=\"/newelection\">New Election</NavLink></li>\n                            <li><NavLink to=\"/elections\">Elections</NavLink></li>\n                        </ul>\n                    </div>\n                </nav>\n            )\n        }\n\n        \n    }\n}\n\nexport default withRouter(Navbar)","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showComponents: false\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <main>\r\n                <h1>\r\n                    <center>test main</center>\r\n                </h1>\r\n            </main></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport { SidebarHeader, SidebarFooter, SidebarContent } from 'react-pro-sidebar';\r\nimport { FaTachometerAlt, FaGem, FaList, FaGithub, FaRegLaughWink, FaHeart } from 'react-icons/fa';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\n\r\nconst Home = ({ image, collapsed, rtl, toggled, handleToggleSidebar }) => {\r\n  return (\r\n    <ProSidebar\r\n      rtl={rtl}\r\n      collapsed={collapsed}\r\n      toggled={toggled}\r\n      breakPoint=\"md\"\r\n      onToggle={handleToggleSidebar}\r\n    >\r\n      <SidebarHeader>\r\n        <div\r\n          style={{\r\n            padding: '24px',\r\n            textTransform: 'uppercase',\r\n            fontWeight: 'bold',\r\n            fontSize: 14,\r\n            letterSpacing: '1px',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n          }}\r\n        >\r\n          ssss\r\n        </div>\r\n      </SidebarHeader>\r\n\r\n      <SidebarContent>\r\n        <Menu>\r\n          <MenuItem icon={<FaTachometerAlt />} >'dashboard'</MenuItem>\r\n          <MenuItem icon={<FaTachometerAlt />} ><Link to=\"/elections\">Elections</Link></MenuItem>\r\n          <MenuItem icon={<FaTachometerAlt />} >'dashboard'</MenuItem>\r\n          <MenuItem icon={<FaTachometerAlt />} >'dashboard'</MenuItem>\r\n          <MenuItem icon={<FaTachometerAlt />} >'dashboard'</MenuItem>\r\n        </Menu>\r\n        \r\n      </SidebarContent>\r\n\r\n      \r\n    </ProSidebar>\r\n  );\r\n};\r\n\r\nexport default Home","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport { SidebarHeader, SidebarFooter, SidebarContent } from 'react-pro-sidebar';\nimport { FaTachometerAlt, FaGem, FaList, FaGithub, FaRegLaughWink, FaHeart } from 'react-icons/fa';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            showComponents: false\n        }\n    }\n\n\n    render(){\n        return (\n            <div>\n                <Sidebar/><Main/>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\nimport { Link } from 'react-router-dom'\n\nclass Vote extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n      }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n            const candCount = await election.methods.candidatesCount().call()\n            this.setState({ candCount })\n            for (var i = 1; i <= candCount; i++) {\n                const candidates = await election.methods.candidates(i).call()\n                if(candidates.election_id === this.state.id){\n                    this.setState({\n                        candidates: [...this.state.candidates, candidates]\n                    })\n                }\n            }\n            console.log(this.state.candidates)\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleInputChange = (e) => {\n        console.log(e.target.id)\n        this.setState({\n            selectedId: e.target.id,\n        })\n        this.vote(e.target.id);\n    }\n\n\n    vote(id) {\n        console.log(this.state.selectedId)\n        this.setState({ loading: true })\n        this.state.election.methods.vote(id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            this.setState({ loading: false })\n            window.location.assign(\"/\");\n        })\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            account: '',\n            election: null,\n            candCount: 0,\n            candidates: [],\n            loading: true,\n            selectedId: null\n        }\n    }\n\n    render(){\n        const electionList = this.state.candidates.map(candidates => {\n            return (\n                <div className=\"contact\" key={candidates.id}>\n                    <li className=\"collection-item avatar\">\n                        <i className=\"material-icons circle blue darken-2\">ballot</i>\n                        <p><b>{candidates.name}</b></p>\n                        <p>{candidates.details}</p>\n                        <a href=\"\" className=\"secondary-content\"><button id={candidates.id} onClick={this.handleInputChange} className=\"waves-effect waves-light btn blue darken-2\">Vote</button></a>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div className=\"container\">\n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar\">\n                        <h3>Candidates</h3>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Vote;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\nimport { Link } from 'react-router-dom'\n\nclass VoteCount extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n      }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n            const candCount = await election.methods.candidatesCount().call()\n            this.setState({ candCount })\n            for (var i = 1; i <= candCount; i++) {\n                const candidates = await election.methods.candidates(i).call()\n                if(candidates.election_id === this.state.id){\n                    this.setState({\n                        candidates: [...this.state.candidates, candidates]\n                    })\n                }\n            }\n            console.log(this.state.candidates)\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleInputChange = (e) => {\n        console.log(e.target.id)\n        this.setState({\n            selectedId: e.target.id,\n        })\n        this.vote(e.target.id);\n    }\n\n\n    vote(id) {\n        console.log(this.state.selectedId)\n        this.setState({ loading: true })\n        this.state.election.methods.vote(id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            this.setState({ loading: false })\n            window.location.assign(\"/\");\n        })\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            account: '',\n            election: null,\n            candCount: 0,\n            candidates: [],\n            loading: true,\n            selectedId: null\n        }\n    }\n\n    render(){\n        const electionList = this.state.candidates.map(candidates => {\n            return (\n                <div className=\"contact\" key={candidates.id}>\n                    <li className=\"collection-item avatar\">\n                        <i className=\"material-icons circle blue darken-2\">ballot</i>\n                        <p><b>{candidates.name}</b></p>\n                        <p>{candidates.details}</p>\n                        <p className=\"secondary-content\"><b>{candidates.voteCount}</b></p>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div className=\"container\">\n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar\">\n                        <p className=\"title\">Candidates</p>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default VoteCount;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass ElectionData extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: [],\n            election_organizer: [],\n            election_id: [],\n            final: [],\n            id: null,\n        };\n    }\n\n    componentDidMount(){\n        let currentComponent = this;\n      \n        axios.get('/api/electionName', {})\n        .then(function(response){ \n            var data = response.data;\n            currentComponent.setState({\n                //election_name: data[0],\n                //election_organizer: data[1],\n                //election_id: data[2],\n                final: data\n            })\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n\n    }\n\n    handleInputChange = (e) => {\n        var name = e.target.innerHTML;\n        var index = 0;\n        for(let i = 0; i < this.state.election_name.length; i++){\n            if(name === this.state.election_name[i]){\n                index = i;\n                break;\n            }\n        }\n        var id = this.state.election_id[index];\n        this.setState({\n            id : id\n        })\n    };\n\n\n    render(){\n        const electionList = this.state.final.map(election => {\n            return (\n                <div className=\"contact\" key={election.election_id}>\n                    <li className=\"collection-item avatar\">\n                        <i className=\"material-icons circle blue darken-2\">ballot</i>\n                        <p><b>{election.election_name}</b></p>\n                        <br></br>\n                        <Link to={\"/candidates/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}><button id={election.election_id} className=\"waves-effect waves-light btn yellow darken-3\">Add candidate</button></Link>\n                        &nbsp;&nbsp;&nbsp;\n                        <Link to={\"/voteCount/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}><button id={election.election_id} className=\"waves-effect waves-light btn red darken-3\">View vote Count</button></Link>\n                        \n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div className=\"container\">\n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar\">\n                        <h3>Elections</h3>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ElectionData;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Choose extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: [],\n            election_organizer: [],\n            election_id: [],\n            final: [],\n            id: null,\n        };\n    }\n\n    componentDidMount(){\n        let currentComponent = this;\n      \n        axios.get('/api/electionName', {})\n        .then(function(response){ \n            var data = response.data;\n            currentComponent.setState({\n                final: data\n            })\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n\n    }\n\n    handleInputChange = (e) => {\n        // console.log(e.target.innerHTML);\n        var name = e.target.innerHTML;\n        var index = 0;\n        for(let i = 0; i < this.state.election_name.length; i++){\n            if(name === this.state.election_name[i]){\n                index = i;\n                break;\n            }\n        }\n        var id = this.state.election_id[index];\n        this.setState({\n            id : id\n        })\n    };\n\n\n    render(){\n        const electionList = this.state.final.map(election => {\n            return (\n                <div className=\"contact\" key={election.election_id}>\n                    <li className=\"collection-item avatar\">\n                        <i className=\"material-icons circle blue darken-2\">ballot</i>\n                        <Link to={\"/vote/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}>{election.election_name}</Link>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div className=\"container\">\n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar\">\n                        <h3>Elections</h3>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Choose;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\n\n\nclass NewCandidate extends Component{\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockChain()\n    }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n    \n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    async loadBlockChain(){\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.addCandidates();\n    }\n    \n    addCandidates() {\n        console.log(this.state);\n        this.setState({ loading: true })\n        this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details, this.state.id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n          this.setState({ loading: false })\n          window.location.assign(\"/\");\n        })\n    }\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n          account: '',\n          election: null,\n          candidate_name: null,\n          candidate_details: null,\n          id: null\n        }\n        this.addCandidates = this.addCandidates.bind(this)\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" id=\"candidate_name\" name=\"candidate_name\" onChange={this.handleInputChange} required/>\n                    <label htmlFor=\"name\">Candidate Name</label><br></br>\n                    <input type=\"text\" id=\"candidate_details\" name=\"candidate_details\" onChange={this.handleInputChange} required/>\n                    <label htmlFor=\"name\">Candidate details</label><br></br><br></br>\n                    <button className=\"btn blue darken-2\" type=\"submit\" name=\"action\">Submit\n                        <i className=\"material-icons right\">send</i>\n                    </button>\n                </form>\n            </div>            \n        )\n    }\n}\n\nexport default NewCandidate;\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'username': 'admin',\n            'password': \"root\"\n        }\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n        console.log(username)\n        axios.post('/api/adminLogin', {\n            username: username,\n            password: password,\n        })\n        .then(function(response){ \n            if(response.data){\n                window.location.assign(\"/newelection\")\n            }else{\n                alert('Incorrect Username or Password');\n            }\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n    }\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" id=\"username\" name=\"username\" onChange={this.handleInputChange} required/>\n                    <label htmlFor=\"name\">Username</label><br></br>\n                    <input type=\"password\" id=\"password\" name=\"password\" onChange={this.handleInputChange} required/>\n                    <label htmlFor=\"name\">Password</label><br></br><br></br>\n                    <button className=\"btn blue darken-2\" type=\"submit\" name=\"action\">Submit\n                        <i className=\"material-icons right\">send</i>\n                    </button>\n                </form>\n            </div>      \n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport NewElection from './components/custom/NewElection';\nimport NavBar from './components/custom/Navbar';\nimport Home from './components/custom/Home';\nimport Vote from './components/custom/Vote';\nimport VoteCount from './components/custom/VoteCount';\nimport ElectionData from './components/custom/ElectionData';\nimport Choose from './components/custom/Choose';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport NewCandidate from './components/custom/NewCandidate';\nimport Login from './components/custom/Login';\n\nclass App extends Component {\n\n    getVal = () => {\n        console.log('Test!')\n    }\n\n    render(){\n        return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <NavBar getVal={this.getVal}/>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/newelection\" component={NewElection} />\n                <Route exact path=\"/elections\" component={ElectionData} />\n                <Route exact path=\"/candidates/:id\" component={NewCandidate} />\n                <Route exact path=\"/vote/:id\" component={Vote} />\n                <Route exact path=\"/choose\" component={Choose} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/voteCount/:id\" component={VoteCount}/>\n            </div>\n        </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport { SidebarHeader, SidebarFooter, SidebarContent } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}