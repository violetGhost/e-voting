{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\E-Voting-App-master\\\\blockchain\\\\src\\\\components\\\\custom\\\\VoteCount.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json';\nimport { Link } from 'react-router-dom';\n\nclass VoteCount extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Election.networks[networkId];\n\n    if (networkData) {\n      const election = new web3.eth.Contract(Election.abi, networkData.address);\n      this.setState({\n        election\n      });\n      const candCount = await election.methods.candidatesCount().call();\n      this.setState({\n        candCount\n      });\n\n      for (var i = 1; i <= candCount; i++) {\n        const candidates = await election.methods.candidates(i).call();\n\n        if (candidates.election_id === this.state.id) {\n          this.setState({\n            candidates: [...this.state.candidates, candidates]\n          });\n        }\n      }\n\n      console.log(this.state.candidates);\n    } else {\n      window.alert('Election contract not deployed to detected network.');\n    }\n  }\n\n  vote(id) {\n    console.log(this.state.selectedId);\n    this.setState({\n      loading: true\n    });\n    this.state.election.methods.vote(id).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n      window.location.assign(\"/\");\n    });\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.setState({\n      id: id\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      console.log(e.target.id);\n      this.setState({\n        selectedId: e.target.id\n      });\n      this.vote(e.target.id);\n    };\n\n    this.state = {\n      id: null,\n      account: '',\n      election: null,\n      candCount: 0,\n      candidates: [],\n      loading: true,\n      selectedId: null\n    };\n  }\n\n  render() {\n    const electionList = this.state.candidates.map(candidates => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contact\",\n        key: candidates.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"collection-item avatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons circle blue darken-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, \"ballot\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 28\n        }\n      }, candidates.name)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, candidates.details), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"secondary-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 58\n        }\n      }, candidates.voteCount))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"collection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"collection-item avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Candidates\")), electionList));\n  }\n\n}\n\nexport default VoteCount;","map":{"version":3,"sources":["C:/Users/USER/Downloads/E-Voting-App-master/blockchain/src/components/custom/VoteCount.js"],"names":["React","Component","Web3","Election","Link","VoteCount","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","console","log","setState","account","networkId","net","getId","networkData","networks","election","Contract","abi","address","candCount","methods","candidatesCount","call","i","candidates","election_id","state","id","vote","selectedId","loading","send","from","once","receipt","location","assign","componentDidMount","props","match","params","constructor","handleInputChange","e","target","render","electionList","map","name","details","voteCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\nimport { Link } from 'react-router-dom'\n\nclass VoteCount extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n      }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n            const candCount = await election.methods.candidatesCount().call()\n            this.setState({ candCount })\n            for (var i = 1; i <= candCount; i++) {\n                const candidates = await election.methods.candidates(i).call()\n                if(candidates.election_id === this.state.id){\n                    this.setState({\n                        candidates: [...this.state.candidates, candidates]\n                    })\n                }\n            }\n            console.log(this.state.candidates)\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleInputChange = (e) => {\n        console.log(e.target.id)\n        this.setState({\n            selectedId: e.target.id,\n        })\n        this.vote(e.target.id);\n    }\n\n\n    vote(id) {\n        console.log(this.state.selectedId)\n        this.setState({ loading: true })\n        this.state.election.methods.vote(id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            this.setState({ loading: false })\n            window.location.assign(\"/\");\n        })\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            account: '',\n            election: null,\n            candCount: 0,\n            candidates: [],\n            loading: true,\n            selectedId: null\n        }\n    }\n\n    render(){\n        const electionList = this.state.candidates.map(candidates => {\n            return (\n                <div className=\"contact\" key={candidates.id}>\n                    <li className=\"collection-item avatar\">\n                        <i className=\"material-icons circle blue darken-2\">ballot</i>\n                        <p><b>{candidates.name}</b></p>\n                        <p>{candidates.details}</p>\n                        <p className=\"secondary-content\"><b>{candidates.voteCount}</b></p>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div className=\"container\">\n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar\">\n                        <p className=\"title\">Candidates</p>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default VoteCount;"]},"metadata":{},"sourceType":"module"}