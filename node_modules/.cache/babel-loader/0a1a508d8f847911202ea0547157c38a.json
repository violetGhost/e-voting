{"ast":null,"code":"var _jsxFileName = \"C:\\\\E-Voting-App-master - mysql\\\\blockchain\\\\src\\\\components\\\\custom\\\\NewCandidate.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json';\n\nclass NewCandidate extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockChain();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async loadBlockChain() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Election.networks[networkId];\n\n    if (networkData) {\n      const election = new web3.eth.Contract(Election.abi, networkData.address);\n      this.setState({\n        election\n      });\n    } else {\n      window.alert('Election contract not deployed to detected network.');\n    }\n  }\n\n  addCandidates() {\n    console.log(this.state);\n    this.setState({\n      loading: true\n    });\n    this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details, this.state.id).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      console.log(receipt);\n      this.setState({\n        loading: false\n      });\n      window.location.assign(\"/\");\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.addCandidates();\n    };\n\n    this.state = {\n      account: '',\n      election: null,\n      candidate_name: null,\n      candidate_details: null,\n      id: null\n    };\n    this.addCandidates = this.addCandidates.bind(this);\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.setState({\n      id: id\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"candidate_name\",\n      name: \"candidate_name\",\n      onChange: this.handleInputChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Candidate Name\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"candidate_details\",\n      name: \"candidate_details\",\n      onChange: this.handleInputChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Candidate details\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 68\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn blue darken-2\",\n      type: \"submit\",\n      name: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Submit\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"send\"))));\n  }\n\n}\n\nexport default NewCandidate;","map":{"version":3,"sources":["C:/E-Voting-App-master - mysql/blockchain/src/components/custom/NewCandidate.js"],"names":["React","Component","Web3","Election","NewCandidate","componentWillMount","loadWeb3","loadBlockChain","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","election","Contract","abi","address","addCandidates","console","log","state","loading","methods","addCandidate","candidate_name","candidate_details","id","send","from","once","receipt","location","assign","constructor","props","handleInputChange","e","target","value","handleSubmit","preventDefault","bind","componentDidMount","match","params","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\n\n\nclass NewCandidate extends Component{\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockChain()\n    }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n    \n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    async loadBlockChain(){\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.addCandidates();\n    }\n    \n    addCandidates() {\n        console.log(this.state);\n        this.setState({ loading: true })\n        this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details, this.state.id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n          this.setState({ loading: false })\n          window.location.assign(\"/\");\n        })\n    }\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n          account: '',\n          election: null,\n          candidate_name: null,\n          candidate_details: null,\n          id: null\n        }\n        this.addCandidates = this.addCandidates.bind(this)\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" id=\"candidate_name\" name=\"candidate_name\" onChange={this.handleInputChange} required/>\n                    <label htmlFor=\"name\">Candidate Name</label><br></br>\n                    <input type=\"text\" id=\"candidate_details\" name=\"candidate_details\" onChange={this.handleInputChange} required/>\n                    <label htmlFor=\"name\">Candidate details</label><br></br><br></br>\n                    <button className=\"btn blue darken-2\" type=\"submit\" name=\"action\">Submit\n                        <i className=\"material-icons right\">send</i>\n                    </button>\n                </form>\n            </div>            \n        )\n    }\n}\n\nexport default NewCandidate;\n"]},"metadata":{},"sourceType":"module"}